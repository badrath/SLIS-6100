<!-- Robert Marini -->
<!-- SLIS 6100 -->
<!-- Hw5 -->

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <!-- //page is being generated by 8-bit unicode java, diocritical accepting -->
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@ taglib prefix="sql" uri="http://java.sun.com/jsp/jstl/sql" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Homework 5</title>
</head>
<body>
	<!-- Beginning of class 3/8/2017 -->
	<sql:setDataSource 
		var="jdbc"
		driver="org.postgresql.Driver"
		url="jdbc:postgresql://neuromancer.icts.uiowa.edu/institutional_repository"
		user="demo"
		password="Spring2017"
	/> <!-- making connections, Driver will work with any Maven Jar with postgres9+, preferred to pick just jdbc4 not jdbc4.something --> 
	<!-- database and database engine can be on different machines -->
	<!-- "jdbc:postgresql://neuromancer.icts.uiowa.edu (host, :localhost: give connection to local machine)/ohiolink (name of db)" -->
	<!--
	<sql:setDataSource var="ohiolink" dataSource="jdbc/OHIO" /> somewhere in architecture, there is an xml OHIO that allows you to keep passwords and usernames out of this document. the file is called a dataSource definition
	 -->
	
	<!-- SQL QUERIES -->
	
	<sql:query var="totRecords" dataSource="${jdbc}"> SELECT COUNT(*) FROM clinical_trials.overall_official; </sql:query> <!-- 1) The total number of records in the table. -->
	
	<sql:query var="distinctInsts" dataSource="${jdbc}"> SELECT DISTINCT COUNT( affiliation ) FROM clinical_trials.overall_official;</sql:query> <!-- 2) The number of distinct affiliations (institutions). -->
	
	<sql:query var="rolesAndCounts" dataSource="${jdbc}"> SELECT DISTINCT role, COUNT(role) FROM clinical_trials.overall_official GROUP BY role; </sql:query> <!-- 3) A list of distinct roles and the respective number of occurrences. -->
	
	<sql:query var="UIARolesAndCounts" dataSource="${jdbc}"> SELECT DISTINCT role,COUNT(role) FROM clinical_trials.overall_official WHERE affiliation='University of Iowa' GROUP BY role; </sql:query> <!-- A list of distinct roles and the respective number of occurrences, limited only to those affiliated with the University of Iowa. -->
	
	<sql:query var="titles" dataSource="${jdbc}"> SELECT DISTINCT clinical_trials.clinical_study.official_title FROM clinical_trials.clinical_study JOIN clinical_trials.overall_official ON clinical_trials.clinical_study.id = clinical_trials.overall_official.id WHERE clinical_trials.overall_official.affiliation='University of Iowa' GROUP BY clinical_trials.clinical_study.official_title; </sql:query> <!-- 5) A list of titles for those studies having an overall official affiliated with the University of Iowa (this will require the clinical_study table as well). -->
	
	<!-- DISPLAY RESULTS -->
	<ol>
		<li>
			<c:out value = "Total Number of Records: ${totRecords.getRows()[0]['count']}"/> <!-- 1) The total number of records in the table. -->
		</li>
		<li>
			<c:out value = "Number of Distinct Affiliations: ${distinctInsts.getRows()[0]['count']}"/> <!-- 2) The number of distinct affiliations (institutions). -->
		</li>
		
		<!-- 3) A list of distinct roles and the respective number of occurrences. -->
		<li>
			<c:out value="Roles and Their Counts:"/>
		</li>
		<ul>
			<li>
				<c:out value="Including NULLs:"/>
			</li>
			<ul>
				<c:forEach items="${rolesAndCounts.rows}" var="result">
					<li>
						<c:out value="Role: ${result['role']}, Count for this role: ${result['count']}"/>
					</li>
				</c:forEach>
			</ul>
			
			<li>
				<c:out value="Not Including NULLs:"/>
			</li>
			<ul>
				<c:forEach items="${rolesAndCounts.rows}" var="result">
					<c:if test="${result['count'] > 0}">
						<li>
							<c:out value="Role: ${result['role']}, Count for this role: ${result['count']}"/>
						</li>
					</c:if>
				</c:forEach>
			</ul>
		</ul>
		
		<!-- 4) A list of distinct roles and the respective number of occurrences, limited only to those affiliated with the University of Iowa. -->
		<li>
			<c:out value="U of IA Roles and Their Counts:"/>
		</li>
		<ul>
			<li>
				<c:out value="Including NULLs:"/>
			</li>
			<ul>
				<c:forEach items="${UIARolesAndCounts.rows}" var="result">
					<li>
						<c:out value="Role: ${result['role']}, Count for this role: ${result['count']}"/>
					</li>
				</c:forEach>
			</ul>
			
			<li>
				<c:out value="Not Including NULLs:"/>
			</li>
			<ul>
				<c:forEach items="${UIARolesAndCounts.rows}" var="result">
					<c:if test="${result['count'] > 0}">
						<li>
							<c:out value="Role: ${result['role']}, Count for this role: ${result['count']}"/>
						</li>
					</c:if>
				</c:forEach>
			</ul>
		</ul>
		
		<!-- 5) A list of titles for those studies having an overall official affiliated with the University of Iowa (this will require the clinical_study table as well). -->
		<li>
			<c:out value="All Titles Affiliated with the University of Iowa: "/>
		</li>
		<ul>
			<li>
				<c:out value="Including NULLs:"/>
			</li>
			<ul>
				<c:forEach items="${titles.rows}" var="result">
					<li>
						<c:out value="Title: ${result['official_title']}"/>
					</li>
				</c:forEach>
			</ul>
			
			<li>
				<c:out value="Not Including NULLs:"/>
			</li>
			<ul>
				<c:forEach items="${titles.rows}" var="result">
					<c:if test="${not empty result['official_title']}">
						<li>
							<c:out value="Title: ${result['official_title']}"/>
						</li>
					</c:if>
				</c:forEach>
			</ul>
		</ul>
		
	</ol>
	
	<!-- 
	
			<c:forEach items="${distinctInsts.rows}" var="result">
			<li>
				<c:out value="${result}"/>
			</li>
		</c:forEach>
	
			<c:forEach items="${distinctInsts.rows}" var="result">
			<li>
				<c:out value="${result}"/>
			</li>
		</c:forEach>
	
	
	
			<c:forEach items="${results.rows}" var="result"> 
			<li>
			<c:out value="${result.count}"/> : 
			</li>
		</c:forEach>
	
	 -->
	
	<!-- ANT is a command line tool that runs commands for you, a rule driven task engine -->
				<!-- <c:out value="${result.last_name}"/> , 
			<c:out value="${result.role}"/> -->
	
</body>
</html>